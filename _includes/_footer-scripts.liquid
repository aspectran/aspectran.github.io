<script>
  $(function () {
    const getStoredTheme = () => localStorage.getItem('theme');
    const setStoredTheme = theme => localStorage.setItem('theme', theme);

    const getPreferredTheme = () => {
      const storedTheme = getStoredTheme();
      if (storedTheme) {
        return storedTheme;
      }
      return 'auto';
    };

    const setTheme = theme => {
      const newTheme = theme === 'auto' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme;
      $('html').attr('data-bs-theme', newTheme);
    };

    const showActiveTheme = (theme) => {
      const $themeToggler = $('.theme-toggler');
      if (!$themeToggler.length) {
        return;
      }

      $themeToggler.find('.dropdown-item.active').removeClass('active');
      $themeToggler.find('.dropdown-item .bi-check2').addClass('d-none');

      const $activeItem = $themeToggler.find('[data-bs-theme-value="' + theme + '"]');
      $activeItem.addClass('active');
      $activeItem.find('.bi-check2').removeClass('d-none');

      const iconClass = $activeItem.find('.bi:first').attr('class').match(/bi-[^\s]+/)[0];
      $themeToggler.find('.theme-icon-active').attr('class', 'bi theme-icon-active ' + iconClass);
    };

    showActiveTheme(getPreferredTheme());

    $(window.matchMedia('(prefers-color-scheme: dark)')).on('change', () => {
      const storedTheme = getStoredTheme();
      if (storedTheme === 'auto' || !storedTheme) {
        setTheme('auto');
      }
    });

    $('.theme-toggler [data-bs-theme-value]').on('click', function() {
      const theme = $(this).data('bs-theme-value');
      setStoredTheme(theme);
      setTheme(theme);
      showActiveTheme(theme);
    });
  });
</script>
<script>
  const supportedLanguages = ['en', 'ko'];
  function getPreferredLangCodeFromLocalStorage() {
    let langCode = localStorage.getItem("preferred-lang-code");
    if (langCode && supportedLanguages.includes(langCode)) {
      return langCode;
    } else {
      return null;
    }
  }
  function setPreferredLangCodeToLocalStorage(langCode) {
    localStorage.setItem("preferred-lang-code", langCode);
  }
  function getPreferredLangCode() {
    let langCode = getPreferredLangCodeFromLocalStorage();
    if (langCode) {
      return langCode;
    }
    const languages = navigator.languages;
    if (languages && languages.length) {
      for (const lang of languages) {
        let code = lang.substring(0, 2);
        if (supportedLanguages.includes(code)) {
          return code;
        }
      }
    }
    return 'en';
  }
  $(function () {
    $(".choice-preferred-lang").on("click", function (e) {
      e.preventDefault();
      let langCode = $(this).attr("lang");
      if (langCode) {
        setPreferredLangCodeToLocalStorage(langCode);
      }
      location.href = $(this).attr("href");
    });
  });
</script>
{% if page.auto_lang %}
<script>
  $(function () {
    const langCode = getPreferredLangCode();
    console.log('auto_lang:', langCode);
    $(".auto-lang." + langCode).removeClass("auto-lang");
  });
</script>
{% endif %}
<script src="https://assets.aspectran.com/js/jquery.backstretch.min.js"></script>
<script>
  $(function () {
    let $win = $(window);
    let $nav = $("#navigation");
    let navHeight = $("#masthead").height()||$nav.height() + $nav.height();
    let lastScrollTop = 0;
    let scrolled;
    let navFixed;
    $win.scroll(function () {
      scrolled = true;
    });
    setInterval(function () {
      if (scrolled) {
        let scrollTop = $win.scrollTop();
        if (Math.abs(lastScrollTop - scrollTop) <= 10) {
          return;
        }
        if (scrollTop <= navHeight) {
          if (navFixed) {
            $nav.removeClass("fixed");
            navFixed = false;
          }
        } else if (scrollTop > lastScrollTop) {
          if (navFixed) {
            $nav.removeClass("fixed");
            navFixed = false;
          }
        } else {
          if (!navFixed) {
            if ($nav.hasClass("immediate")) {
              $nav.removeClass("immediate")
            } else {
              $nav.addClass("fixed");
              $nav.hide().fadeIn(500);
              navFixed = true;
            }
          }
        }
        lastScrollTop = scrollTop;
        scrolled = false;
      }
    }, 200);
    $nav.find("ul.submenu > li > a").on('click touchend', function (e) {
      let link = $(this).attr('href');
      if (link) {
        window.location = link;
      }
    });
    /* google search */
    {% capture google_search_site %}https://aspectran.com/{% endcapture %}
    $("form[name=google_quick_search]").submit(function (event) {
      window.open('https://www.google.com/search?q=' + this.keyword.value + '+site:{{ google_search_site | cgi_escape }}');
      event.preventDefault();
    });
  });
</script>

{% if page.sidebar == "toc" or page.sidebar == "toc-left" %}
<script>
  $(function () {
    $("#masthead h1, article h1, article h2, article h3").each(function (index, item) {
      let tagn = item.localName;
      let anchor = "top-of-page";
      if (tagn !== "h1") {
        anchor = "anchor-" + (index + 1);
        $(this).before("<a class='toc-anchor " + anchor + "' id='" + anchor + "' name='" + anchor + "'></a>");
      }
      $("<li class='toc-" + tagn + "'></li>")
        .append($("<a anchor='" + anchor + "' href='#" + anchor + "'/>").text($(item).text()))
        .appendTo("#toc ul");
    });
  });
</script>
{% endif %}

{% if page.sidebar %}
<script>
  $(function () {
    $(".lazy-sticky").each(function () {
      const $win = $(window);
      const $this = $(this);
      const baseOffsetTop = $this.offset().top;
      const upToTopHeight = $("#up-to-top").height() + 30 + 60;
      let footerHeight = $("#footer-content").height() + upToTopHeight;
      let offsetTop = 0;
      let thisHeight = $this.height();
      let winHeight = $win.height();
      let scrollTimer = null;
      let immediate = false;
      $this.find("#toc ul a").click(function (e) {
        immediate = true;
        let anchor = $(this).attr("anchor");
        if (anchor !== "top-of-page") {
          $("#navigation").addClass("immediate");
        }
      });
      $win.scroll(function () {
          let scrollTop = $win.scrollTop();
          if (scrollTop < baseOffsetTop) {
            if (scrollTimer) {
              clearInterval(scrollTimer);
              scrollTimer = null;
            }
            scrollTimer = setInterval(function () {
              if (offsetTop !== 0) {
                $this.css({
                  top: 0
                });
              }
              offsetTop = 0;
              clearInterval(scrollTimer);
              scrollTimer = null;
              immediate = false;
            }, immediate ? 250 : 500);
          } else {
            let topBarHeight = $("#navigation.fixed .top-bar").height()||0;
            if (immediate || (scrollTop > baseOffsetTop + topBarHeight + offsetTop + thisHeight - 20) ||
              (scrollTop < baseOffsetTop + topBarHeight + offsetTop)) {
              if ($this.offset().left >= 15 && $this.width() < 500) {
                if (scrollTimer) {
                  clearInterval(scrollTimer);
                  scrollTimer = null;
                }
                scrollTimer = setInterval(function () {
                  topBarHeight = $("#navigation.fixed .top-bar").height()||0;
                  scrollTop = $win.scrollTop();
                  if (scrollTop < baseOffsetTop + topBarHeight) {
                    scrollTop = 0;
                  } else {
                    scrollTop = scrollTop - baseOffsetTop + topBarHeight + 30;
                  }
                  if (scrollTop > $(document).height() - footerHeight - thisHeight - baseOffsetTop + topBarHeight) {
                    scrollTop = $(document).height() - footerHeight - thisHeight - baseOffsetTop + topBarHeight;
                  }
                  offsetTop = scrollTop;
                  $this.css({
                    position: "relative"
                  });
                  $this.animate({
                    top: scrollTop + "px"
                  }, 300);
                  clearInterval(scrollTimer);
                  scrollTimer = null;
                  winHeight = $win.height();
                  thisHeight = $this.height();
                  footerHeight = $("#footer-content").height() + upToTopHeight;
                  immediate = false;
                }, immediate ? 250 : 500);
              }
            }
          }
      });
      $win.resize(function () {
          if ($this.offset().left < 15 || $this.width() >= 500) {
            clearInterval(scrollTimer);
            $this.css("top", 0);
          } else {
            $win.scroll();
          }
      });
      setTimeout(function () {
          if ($win.scrollTop() > baseOffsetTop) {
            offsetTop = $win.scrollTop();
            $win.scroll();
          }
      }, 150);
    });
  });
</script>
{% endif %}

{% if page.header.image_fullwidth %}
<script>
  $("#masthead").backstretch("{{ site.urlimg }}{{ page.header.image_fullwidth }}", {fade: 900, bgcolor: '#2A2E31'});
</script>
{% endif %}
{% if page.header.slide_images and page.header.slide_images[0] %}
<script>
  $("#masthead").backstretch([
    "{{ site.urlimg }}{{ page.header.slide_images[0] }}"
  {% for image in page.header.slide_images %}
  {% if forloop.index > 1 %}, "{{ site.urlimg }}{{ image }}"{% endif %}
  {% endfor %}
  ], {duration: 2300, fade: 900});
</script>
{% endif %}

<script>
  /* Creating custom :external selector */
  $.expr[':'].external = function (obj) {
    return obj.href
        && !obj.href.match(/^javascript:/)
        && !obj.href.match(/^mailto:/)
        && (obj.hostname != location.hostname);
  };
  $(function () {
    /* Add 'external' CSS class to all external links */
    $('a:external').addClass('external');
    /* turn target into target=_blank for elements w external class */
    $(".external").attr('target', '_blank');
    /* To apply Bootstrap table styles to tables created using Markdown in Jekyll */
    $("article table").addClass("table table-striped table-bordered");
  });
</script>

{% comment %}
#  Start of Tawk.to Script
#
#  More information in _config.yml
#
{% endcomment %}
{% if site.tawkto_embed_uri and page.tawkto == true %}
<script>
  var $_Tawk_API={},$_Tawk_LoadStart=new Date();
  (function (){
  var s1=document.createElement("script"),s0=document.getElementsByTagName("script")[0];
  s1.async=true;
  s1.src='{{ site.tawkto_embed_uri }}';
  s1.charset='UTF-8';
  s1.setAttribute('crossorigin','*');
  s0.parentNode.insertBefore(s1,s0);
  })();
</script>
{% endif %}

{% if site.google_translate_website == true %}
{% include google-translate-website %}
{% endif %}
